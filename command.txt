- Tu lances la commande npm init -y pour générer le fichier package.json.


- Tu installe Typescript, ts-node, et nodemon avec:
npm install Typescript ts-node nodemon --save-dev
    - Typescript: ecrire du code en Ts
    - ts-node: exec directement du Typescript sans le compiler manuellement
    - nodemon: relancer automatiquement le serveur a chaque modification


- Tu crées un fichier tsconfig.json avec npx tsc --init
tsconfig.json: “Quels fichiers je dois compiler ? Où je mets les .js générés ? Quelles règles je dois appliquer ?”


- On ajoute le script dans le package.json:
"scripts": {
  "start": "nodemon --watch './**/*.ts' --exec 'ts-node' server.ts"
}
nodemon regarde en permanence le code,
on regarde dans tous les folders possible et on exec avec ts-node server.ts

- On exec avec npm start



/*Annexes*/

npm → installe des paquets et gère tes dépendances.
npx → exécute un paquet sans l’installer globalement.
nvm → change facilement de version de Node.js.
npm start → lance le script "start" défini dans package.json.